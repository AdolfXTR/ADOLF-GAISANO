/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin;

import config.dbConnector;
import static java.awt.Color.red;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import users.usersDashboard;

/**
 *
 * @author milan
 */
public class UpdateRooms extends javax.swing.JFrame {

    
    /**
     * Creates new form UpdateRooms
     */
    public UpdateRooms() {
        initComponents();
    }
    Connection connect = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        String path2 = null;
        
        public String destination = ""; 
        File selectedFile;
        public String oldpath;
        public String path;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        acc_name1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        aa = new javax.swing.JLabel();
        acc_id = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        adds = new javax.swing.JButton();
        update = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rstat = new javax.swing.JComboBox<>();
        rid = new javax.swing.JTextField();
        rclass = new javax.swing.JTextField();
        rp = new javax.swing.JTextField();
        cprice2 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Showcard Gothic", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("ROOMS UPDATE");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, -1, -1));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BACK");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 50, 40, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 120));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        acc_name1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        acc_name1.setForeground(new java.awt.Color(255, 255, 255));
        acc_name1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        acc_name1.setText("USERS");
        acc_name1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acc_name1MouseClicked(evt);
            }
        });
        jPanel1.add(acc_name1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/admin/zsa.png"))); // NOI18N
        jLabel11.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 70));

        aa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        aa.setForeground(new java.awt.Color(255, 255, 255));
        aa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        aa.setText("Current User:");
        jPanel1.add(aa, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        acc_id.setBackground(new java.awt.Color(255, 255, 255));
        acc_id.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        acc_id.setForeground(new java.awt.Color(255, 255, 255));
        acc_id.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        acc_id.setText("ID");
        jPanel1.add(acc_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 130, 410));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        roomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(roomTable);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 210, 370));

        adds.setBackground(new java.awt.Color(0, 102, 102));
        adds.setText("ADD");
        adds.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        adds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addsActionPerformed(evt);
            }
        });
        jPanel2.add(adds, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 70, -1));

        update.setBackground(new java.awt.Color(0, 102, 102));
        update.setText("UPDATE");
        update.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel2.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 70, -1));

        clear.setBackground(new java.awt.Color(0, 102, 102));
        clear.setText("CLEAR");
        clear.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel2.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 70, -1));

        delete.setBackground(new java.awt.Color(0, 102, 102));
        delete.setText("DELETE");
        delete.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel2.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, 80, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Room ID:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Room Class:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Room Price:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("User Status:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, -1, -1));

        rstat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Out of Stock" }));
        rstat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rstatActionPerformed(evt);
            }
        });
        jPanel2.add(rstat, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 270, -1, 40));

        rid.setEnabled(false);
        rid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ridActionPerformed(evt);
            }
        });
        jPanel2.add(rid, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, 160, 30));
        jPanel2.add(rclass, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 160, 30));
        jPanel2.add(rp, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 160, 30));

        cprice2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cprice2.setText("Change Quantity:");
        jPanel2.add(cprice2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 210, -1, -1));
        jPanel2.add(quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 210, 170, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 590, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acc_name1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acc_name1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_acc_name1MouseClicked

    private void roomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomTableMouseClicked
        int rowIndex = roomTable.getSelectedRow();

        if(rowIndex < 0){
            JOptionPane.showMessageDialog(null, "Please Select an Item!");
        }else{
            try{
                dbConnector dbc = new dbConnector();
                TableModel tbl = roomTable.getModel();
                ResultSet rs = dbc.getData("SELECT * FROM tbl_room WHERE r_id = '"+tbl.getValueAt(rowIndex, 0)+"'");
                if(rs.next()){

                    rid.setText(""+rs.getString("r_id"));
                    rclass.setText(""+rs.getString("r_class"));
                    rp.setText(""+rs.getString("r_price"));
                    rstat.setSelectedItem(""+rs.getString("c_status"));
                    adds.setEnabled(false);
                    adds.setForeground(red);
                    boolean checkadd = false;

                }
            }catch(SQLException ex){
                System.out.println(""+ex);
            }
        }
    }//GEN-LAST:event_roomTableMouseClicked

    private void addsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addsActionPerformed
        boolean checkadd = false;
        if (checkadd) {
            if (rclass.getText().isEmpty() || rp.getText().isEmpty() || quantity.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "All fields including quantity are required!");
            } else {
                dbConnector dbc = new dbConnector();
                dbc.insertData("INSERT INTO tbl_room (r_class, r_price, r_status, r_image, r_quantity) VALUES ('" + rclass.getText() + "','" + rp.getText() + "','" + rstat.getSelectedItem() + "','', '" + quantity.getText() + "')");
                JOptionPane.showMessageDialog(null, "Successfully Added!");
                displayData();
                checkadd = true;
                rid.setText("");
                rclass.setText("");
                rp.setText("");
                rstat.setSelectedIndex(0);
                quantity.setText(""); // Clear quantity field after insertion
            }
        } else {
            JOptionPane.showMessageDialog(null, "Clear the field first!");
        }
    }//GEN-LAST:event_addsActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // Ensure destination and oldpath are initialized with default values
        String defaultPath = "src/usersimages/";
        if (destination == null || destination.isEmpty()) {
            destination = defaultPath;
        }

        if (oldpath == null || oldpath.isEmpty()) {
            oldpath = defaultPath;
        }

        if (rid.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select a room first!");
        } else {
            if (rclass.getText().isEmpty() || rp.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "r_class, c_price fields are required!");
            } else {
                dbConnector dbc = new dbConnector();

                // Retrieve the current quantity and image path from the database
                int currentQty = 0;
                String existingImagePath = "";
                try {
                    ResultSet rs = dbc.getData("SELECT r_quantity, r_image FROM tbl_room WHERE r_id = '" + rid.getText() + "'");
                    if (rs.next()) {
                        currentQty = rs.getInt("quantity");
                        existingImagePath = rs.getString("r_image");
                    }
                    rs.close();
                } catch (SQLException ex) {
                    System.err.println("Error retrieving current quantity and image path: " + ex.getMessage());
                }

                // Determine the c_status based on quantity
                String status;
                int qty = currentQty;
                if (!quantity.getText().isEmpty()) {
                    qty = Integer.parseInt(quantity.getText());
                }
                status = (qty < 1) ? "Out of Stock" : "Available";

                // Define the c_image value
                String r_image = existingImagePath;

                // Construct the SQL update query
                StringBuilder updateQuery = new StringBuilder("UPDATE tbl_room SET ");
                updateQuery.append("r_class = '").append(rclass.getText()).append("', ");
                updateQuery.append("r_price = '").append(rp.getText()).append("', ");
                updateQuery.append("r_status = '").append(status).append("', ");
                updateQuery.append("r_image = '").append(r_image).append("'");

                // Only update quantity if it's not empty
                if (!quantity.getText().isEmpty()) {
                    updateQuery.append(", quantity = '").append(quantity.getText()).append("'");
                }

                updateQuery.append(" WHERE c_id = '").append(rid.getText()).append("'");

                // Execute the update query
                dbc.updateData(updateQuery.toString());

                displayData();
                boolean checkadd = true;
                rid.setText("");
                rclass.setText("");
                rp.setText("");
                quantity.setText("");
                rstat.setSelectedIndex(0);

                adminDashboard ad = new adminDashboard();
                ad.setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_updateActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        boolean checkadd = true;
        rid.setText("");
        rclass.setText("");
        rp.setText("");
        rstat.setSelectedIndex(0);

    }//GEN-LAST:event_clearActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int selectedRow = roomTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to delete!");
            return; // Exit the method if no row is selected
        }

        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            String carIdToDelete = roomTable.getValueAt(selectedRow, 0).toString(); // Assuming the first column contains the car ID
            dbConnector dbc = new dbConnector();
            String deleteQuery = "DELETE FROM tbl_cars WHERE c_id = '" + carIdToDelete + "'";
            dbc.updateData(deleteQuery);

            // Remove the selected row from the table
            DefaultTableModel model = (DefaultTableModel) roomTable.getModel();
            model.removeRow(selectedRow);

            JOptionPane.showMessageDialog(null, "Record deleted successfully!");
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void rstatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rstatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rstatActionPerformed

    private void ridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ridActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        adminDashboard ads = new adminDashboard();
        ads.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateRooms().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aa;
    private javax.swing.JLabel acc_id;
    private javax.swing.JLabel acc_name1;
    private javax.swing.JButton adds;
    private javax.swing.JButton clear;
    private javax.swing.JLabel cprice2;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField quantity;
    public javax.swing.JTextField rclass;
    public javax.swing.JTextField rid;
    private javax.swing.JTable roomTable;
    public javax.swing.JTextField rp;
    public javax.swing.JComboBox<String> rstat;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private void displayData() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
